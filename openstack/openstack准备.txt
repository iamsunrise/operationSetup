启用OpenStack库
yum install centos-release-openstack-rocky
安装OpenStack客户端
yum install python-openstackclient
安装 openstack-selinux软件包
yum install openstack-selinux
安装SQL数据库
yum install mariadb mariadb-server python2-PyMySQL

/etc/my.cnf.d/openstack.cnf


[mysqld]
bind-address = 192.168.0.111

default-storage-engine = innodb
innodb_file_per_table = on
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8

安装消息队列
yum install rabbitmq-server

keystone安装和配置组件
yum install openstack-keystone httpd mod_wsgi
glance安装和配置组件
yum install openstack-glance

nove安装和配置组件
yum install openstack-nova-api openstack-nova-conductor \
  openstack-nova-console openstack-nova-novncproxy \
  openstack-nova-scheduler openstack-nova-placement-api

neutron 安装和配置组件
yum install openstack-neutron openstack-neutron-ml2 \
  openstack-neutron-linuxbridge ebtables


ntpdata time1.ailiyun.com
yum install -y rdate
mv /etc/localtime /etc/localtime_NY
ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

安装和配置Keystone
MariaDB [(none)]> CREATE DATABASE keystone;
                                  glance
				  nova
nova_api
neutron
cinder



CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED
BY 'newhand';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
IDENTIFIED BY 'newhand';


CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED
BY 'newhand';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
IDENTIFIED BY 'newhand';


CREATE DATABASE nova;
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED
BY 'newhand';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
IDENTIFIED BY 'newhand';


CREATE DATABASE nova_api;
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED
BY 'newhand';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' \
IDENTIFIED BY 'newhand';



CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED
BY 'newhand';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
IDENTIFIED BY 'newhand';

sho

CREATE DATABASE cinder;
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'localhost' IDENTIFIED
BY 'newhand';
GRANT ALL PRIVILEGES ON cinder.* TO 'cinder'@'%' \
IDENTIFIED BY 'newhand';

keystone安装
 yum install openstack-keystone httpd mod_wsgi

/etc/keystone/keystone.conf
[database]
# ...
connection = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone

 mysql -h192.168.0.131 -ukeystone -pnewhand -e "use keystone;show tables;"

                                                                                               
[memcache]                                                                                       
                                                                                                
#                                                                                          # From keystone                                                                             
#                                                                                           servers = 192.168.0.131:11211 


provider = fernet  


yum install memcached python-memcached
systemctl enable memcached 
systemctl start memcached


初始化Fernet密钥存储库：

# keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
# keystone-manage credential_setup --keystone-user keystone --keystone-group keystone

引导身份服务
keystone-manage bootstrap --bootstrap-password newhand \
  --bootstrap-admin-url http://192.168.0.131:5000/v3/ \
  --bootstrap-internal-url http://192.168.0.131:5000/v3/ \
  --bootstrap-public-url http://192.168.0.131:5000/v3/ \
  --bootstrap-region-id RegionOne


# systemctl enable httpd.service
# systemctl start httpd.service

/etc/httpd/conf/httpd.conf ServerName 192.168.0.131:80   
ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/
 vim /etc/sysconfig/memcached   OPTIONS="-l 192.168.0.131,::1" 


export OS_USERNAME=admin
export OS_PASSWORD=newhand
export OS_PROJECT_NAME=admin
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_DOMAIN_NAME=Default
export OS_AUTH_URL=http://192.168.0.131:5000/v3
export OS_IDENTITY_API_VERSION=3


创建域，项目，用户和角色
openstack project create --domain default \
  --description "Service Project" service
创建myproject项目
openstack project create --domain default \
  --description "Demo Project" myproject
创建myuser用户：
 openstack user create --domain default --password-prompt myuser
创建myrole角色：
openstack role create myrole
将myrole角色添加到myproject项目和myuser用户：
openstack role add --project myproject --user myuser myrole

分别创建glance，nova,neutron,cinder并添加到myrole

验证操作
unset OS_AUTH_URL OS_PASSWORD
openstack --os-auth-url http://192.168.0.131:5000/v3 \
  --os-project-domain-name Default --os-user-domain-name Default \
  --os-project-name admin --os-username admin token issue

openstack --os-auth-url http://192.168.0.131:5000/v3   --os-project-domain-name Default --os-user-domain-name Default   --os-project-name myproject --os-username myuser token issue

glance安装和配置

将admin角色添加到glance用户和 service项目：
openstack role add --project service --user glance admin
创建glance服务实体：
openstack service create --name glance \
  --description "OpenStack Image" image
创建Image服务API端点：
openstack endpoint create --region RegionOne \
  image public http://192.168.0.131:9292

openstack endpoint create --region RegionOne \
  image internal  http://192.168.0.131:9292

openstack endpoint create --region RegionOne \
  image admin  http://192.168.0.131:9292

安装和配置组件
安装包
yum install openstack-glance
编辑/etc/glance/glance-api.conf

[database]
# ...
connection = mysql+pymysql://glance:newhand@192.168.0.131/glance

/etc/glance/glance-registry.conf
connection = mysql+pymysql://glance:newhand@192.168.0.131/glance


填充Image服务数据库：
su -s /bin/sh -c "glance-manage db_sync" glance

mysql -h192.168.0.131 -uglance -pnewhand -e "use glance;show tables;"

在[keystone_authtoken]和[paste_deploy]部分中，配置身份服务访问

[keystone_authtoken]
# ...
www_authenticate_uri  = http://192.168.0.131:5000
auth_url = http://192.168.0.131:5000
memcached_servers = 192.168.0.131:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = glance
password = newhand

[paste_deploy]
# ...
flavor = keystone


glance-api

[glance_store]
# ...
stores = file,http
default_store = file
filesystem_store_datadir = /var/lib/glance/images/

启动Image服务并将其配置为在系统引导时启动：
systemctl enable openstack-glance-api.service \
  openstack-glance-registry.service
systemctl start openstack-glance-api.service \
  openstack-glance-registry.service

验证操作
wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img
openstack image create "cirros"   --file /home/work/tools/cirros-0.4.0-x86_64-disk.img   --disk-format qcow2 --container-format bare   --public

安装和配置nova控制器节点

安装和配置组件
MariaDB [(none)]> CREATE DATABASE nova_cell0;
MariaDB [(none)]> CREATE DATABASE placement;
安装包：

# yum install openstack-nova-api openstack-nova-conductor \
  openstack-nova-console openstack-nova-novncproxy \
  openstack-nova-scheduler openstack-nova-placement-api

编辑/etc/nova/nova.conf文件并完成以下操作：
[DEFAULT]
# ...
enabled_apis = osapi_compute,metadata
在[api_database]，[database]和[placement_database] 部分，配置数据库访问：

[api_database]
# ...
connection = mysql+pymysql://nova:newhand@192.168.0.131/nova_api

[database]
# ...
connection = mysql+pymysql://nova:newhand@192.168.0.131/nova

[placement_database]
# ...
connection = mysql+pymysql://placement:newhand@192.168.0.131/placement
在该[DEFAULT]部分中，配置RabbitMQ消息队列访问：

[DEFAULT]
# ...
transport_url = rabbit://openstack:newhand@192.168.0.131

在[api]和[keystone_authtoken]部分中，配置身份服务访问：

[api]
# ...
auth_strategy = keystone

[keystone_authtoken]
# ...
auth_url = http://192.168.0.131:5000/v3                           
memcached_servers = 192.168.0.131:11211                           
auth_type = password                                              
project_domain_name = Default                                     
user_domain_name = Default                                        
project_name = service                                            
username = nova                                                   
password = newhand               


在该[DEFAULT]部分中，启用对网络服务的支持：

[DEFAULT]
# ...
use_neutron = true
firewall_driver = nova.virt.firewall.NoopFirewallDriver         

[vnc]
enabled = true
# ...
server_listen = 0.0.0.0
server_proxyclient_address = 192.168.0.131

[glance]
# ...
api_servers = http://192.168.0.131:9292

在该[oslo_concurrency]部分中，配置锁定路径：

[oslo_concurrency]
# ...
lock_path = /var/lib/nova/tmp

在该[placement]部分中，配置Placement API：

[placement]                                                       
region_name = RegionOne                                           
project_domain_name = Default                                     
project_name = service                                            
auth_type = password                                              
user_domain_name = Default                                        
auth_url = http://192.168.0.131:5000/v3                           
username = placement                                              
password = newhand 


由于打包错误，您必须通过将以下配置添加到以下内容来启用对Placement API的访问 /etc/httpd/conf.d/00-nova-placement-api.conf：

<Directory /usr/bin>
   <IfVersion >= 2.4>
      Require all granted
   </IfVersion>
   <IfVersion < 2.4>
      Order allow,deny
      Allow from all
   </IfVersion>
</Directory>
重启httpd服务：

# systemctl restart httpd

填充nova-api和placement数据库：

# su -s /bin/sh -c "nova-manage api_db sync" nova
 注意

忽略此输出中的任何弃用消息。

注册cell0数据库：

# su -s /bin/sh -c "nova-manage cell_v2 map_cell0" nova
创建cell1单元格：

# su -s /bin/sh -c "nova-manage cell_v2 create_cell --name=cell1 --verbose" nova
525d81bb-57a8-4e65-8473-828843c6c49b

填充新星数据库：

# su -s /bin/sh -c "nova-manage db sync" nova
验证nova cell0和cell1是否正确注册：

# su -s /bin/sh -c "nova-manage cell_v2 list_cells" nova
+-------+--------------------------------------+
| Name  | UUID                                 |
+-------+--------------------------------------+
| cell1 | 109e1d4b-536a-40d0-83c6-5f121b82b650 |
| cell0 | 00000000-0000-0000-0000-000000000000 |
+-------+----------------------------------


mysql -u nova -pnewhand -e "use nova;show tables;"
mysql -u nova -pnewhand -e "use nova_api;show tables;"
systemctl enable openstack-nova-api.service \
  openstack-nova-consoleauth openstack-nova-scheduler.service \
  openstack-nova-conductor.service openstack-nova-novncproxy.service
# systemctl start openstack-nova-api.service \
  openstack-nova-consoleauth openstack-nova-scheduler.service \
  openstack-nova-conductor.service openstack-nova-novncproxy.service

创建nova服务实体：

创建nova服务实体：

$ openstack service create --name nova \
  --description "OpenStack Compute" compute

创建Compute API服务端点：

$ openstack endpoint create --region RegionOne \
  compute public http://192.168.0.131:8774/v2.1

openstack endpoint create --region RegionOne \
  compute internal http://192.168.0.131:8774/v2.1

openstack endpoint create --region RegionOne \
  compute admin http://192.168.0.131:8774/v2.1

使用您选择的创建Placement服务用户PLACEMENT_PASS：

$ openstack user create --domain default --password-prompt placement

User Password:
Repeat User Password:
+---------------------+----------------------------------+
| Field               | Value                            |
+---------------------+----------------------------------+
| domain_id           | default                          |
| enabled             | True                             |
| id                  | fa742015a6494a949f67629884fc7ec8 |
| name                | placement                        |
| options             | {}                               |
| password_expires_at | None                             |
+---------------------+----------------------------------+
使用admin角色将Placement用户添加到服务项目：

$ openstack role add --project service --user placement admin
 注意

此命令不提供输出。

在服务目录中创建Placement API条目：

$ openstack service create --name placement \
  --description "Placement API" placement

+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Placement API                    |
| enabled     | True                             |
| id          | 2d1a27022e6e4185b86adac4444c495f |
| name        | placement                        |
| type        | placement                        |
+-------------+----------------------------------+
创建Placement API服务端点：

$ openstack endpoint create --region RegionOne \
  placement public http://192.168.0.131:8778

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 2b1b2637908b4137a9c2e0470487cbc0 |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 2d1a27022e6e4185b86adac4444c495f |
| service_name | placement                        |
| service_type | placement                        |
| url          | http://controller:8778           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  placement internal http://192.168.0.131:8778

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 02bcda9a150a4bd7993ff4879df971ab |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 2d1a27022e6e4185b86adac4444c495f |
| service_name | placement                        |
| service_type | placement                        |
| url          | http://controller:8778           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  placement admin http://192.168.0.131:8778

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 3d71177b9e0f406f98cbff198d74b182 |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | 2d1a27022e6e4185b86adac4444c495f |
| service_name | placement                        |
| service_type | placement                        |
| url          | http://controller:8778           |
+--------------+----------------------------------+

systemctl restart openstack-nova-api.service \
  openstack-nova-consoleauth openstack-nova-scheduler.service \
  openstack-nova-conductor.service openstack-nova-novncproxy.service


 ntpdate cn.pool.ntp.org

hwclock --systohc
计算节点：0.130
 yum install openstack-nova-compute -y


diff nova.conf nova.conf_131 
3482a3483
> connection=mysql+pymysql://nova:newhand@192.168.0.131/nova_api
4570a4572
> connection=mysql+pymysql://nova:newhand@192.168.0.131/nova
6356c6358
< virt_type=kvm
---
> #virt_type=kvm
8971a8974
> connection=mysql+pymysql://placement:newhand@192.168.0.131/placement
10752c10755
< server_proxyclient_address=192.168.0.132
---
> server_proxyclient_address=192.168.0.131
10773c10776
< novncproxy_base_url=http://192.168.0.131:6080/vnc_auto.html
---
> #novncproxy_base_url=http://127.0.0.1:6080/vnc_auto.html

计算节点添加到单元数据库
 重要

在控制器节点上运行以下命令。

获取管理员凭据以启用仅管理员CLI命令，然后确认数据库中是否存在计算主机：

$ . admin-openrc

$ openstack compute service list --service nova-compute
+----+-------+--------------+------+-------+---------+----------------------------+
| ID | Host  | Binary       | Zone | State | Status  | Updated At                 |
+----+-------+--------------+------+-------+---------+----------------------------+
| 1  | node1 | nova-compute | nova | up    | enabled | 2017-04-14T15:30:44.000000 |
+----+-------+--------------+------+-------+---------+----------------------------+
发现计算主机：

# su -s /bin/sh -c "nova-manage cell_v2 discover_hosts --verbose" nova

Found 2 cell mappings.
Skipping cell0 since it does not contain hosts.
Getting compute nodes from cell 'cell1': ad5a5985-a719-4567-98d8-8d148aaae4bc
Found 1 computes in cell: ad5a5985-a719-4567-98d8-8d148aaae4bc
Checking host mapping for compute host 'compute': fe58ddc1-1d65-4f87-9456-bc040dc106b3
Creating host mapping for compute host 'compute': fe58ddc1-1d65-4f87-9456-bc040dc106b3
 注意

添加新计算节点时，必须在控制器节点上运行以注册这些新计算节点。或者，您可以在以下位置设置适当的间隔 ：nova-manage cell_v2 discover_hosts/etc/nova/nova.conf

[scheduler]
discover_hosts_in_cells_interval = 300




compute日志 tail -f /var/log/nova/nova-compute.log

nova service-list查看compute端点是否启动

neutrom

openstack user list

在配置OpenStack Networking（neutron）服务之前，必须创建数据库，服务凭据和API端点。

要创建服务凭据，请完成以下步骤：

创建neutron用户：

$ openstack user create --domain default --password-prompt neutron

User Password:
Repeat User Password:
+---------------------+----------------------------------+
| Field               | Value                            |
+---------------------+----------------------------------+
| domain_id           | default                          |
| enabled             | True                             |
| id                  | fdb0f541e28141719b6a43c8944bf1fb |
| name                | neutron                          |
| options             | {}                               |
| password_expires_at | None                             |
+---------------------+----------------------------------+
将admin角色添加到neutron用户：

$ openstack role add --project service --user neutron admin
 注意

此命令不提供输出。

创建neutron服务实体：

$ openstack service create --name neutron \
  --description "OpenStack Networking" network

+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Networking             |
| enabled     | True                             |
| id          | f71529314dab4a4d8eca427e701d209e |
| name        | neutron                          |
| type        | network                          |
+-------------+----------------------------------+
创建网络服务API端点：

$ openstack endpoint create --region RegionOne \
  network public http://controller:9696

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 85d80a6d02fc4b7683f611d7fc1493a3 |
| interface    | public                           |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | f71529314dab4a4d8eca427e701d209e |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  network internal http://controller:9696

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 09753b537ac74422a68d2d791cf3714f |
| interface    | internal                         |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | f71529314dab4a4d8eca427e701d209e |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------+

$ openstack endpoint create --region RegionOne \
  network admin http://controller:9696

+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| enabled      | True                             |
| id           | 1ee14289c9374dffb5db92a5c112fc4e |
| interface    | admin                            |
| region       | RegionOne                        |
| region_id    | RegionOne                        |
| service_id   | f71529314dab4a4d8eca427e701d209e |
| service_name | neutron                          |
| service_type | network                          |
| url          | http://controller:9696           |
+--------------+----------------------------------

openstack endpoint delete fce6808df0af47a2bb47a55914957211



 grep '^[a-z]' /etc/neutron/neutron.conf 
auth_strategy = keystone
core_plugin = ml2
service_plugins =
notify_nova_on_port_status_changes = true
notify_nova_on_port_data_changes = true
transport_url =  rabbit://openstack:newhand@192.168.0.131
connection = mysql+pymysql://neutron:newhand@192.168.0.131/neutron
www_authenticate_uri = http://192.168.0.131:5000
auth_url = http://192.168.0.131:5000
memcached_servers = 192.168.0.131:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = newhand
auth_url = http://192.168.0.131:5000
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = newhand
lock_path = /var/lib/neutron/tmp

配置模块化第2层（ML2）插件


https://docs.openstack.org/neutron/rocky/install/controller-install-option1-rdo.html


配置元数据代理
grep '^[a-z]' /etc/neutron/metadata_agent.ini
nova_metadata_host = 192.168.0.131
metadata_proxy_shared_secret = newhand

配置Compute服务以使用Networking服务

完成安装

# ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini
 su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
  --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

systemctl restart neutron-server.service \
  neutron-linuxbridge-agent.service neutron-dhcp-agent.service \
  neutron-metadata-agent.service


安装和配置计算节点

https://docs.openstack.org/neutron/rocky/install/compute-install-rdo.html



www_authenticate_uri = http://192.168.0.131:5000                                           
auth_url = http://192.168.0.131:5000                                                       
memcached_servers = 192.168.0.131:11211                                                    
auth_type = password                                                                       
project_domain_name = default                                                              
user_domain_name = default                                                                 
project_name = service                                                                     
username = neutron                                                                         
password = newhand 




装好后
nova service-list
neutron agent-list


openstack subnet create --network provider --allocation-pool start=10.11.10.100 end=10.11.10.200 --dns-nameserver 10.11.10.2 --gateway 10.11.10.2 --subnet-range 10.11.10.0/24 provider-subnet

openstack subnet list
openstack network list

openstack flavor create --id 0 --vcpus 1 --ram 64 --disk 1 m1.nano
sh /home/work/shell/demo-openstack.sh 
openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey


openstack server create --flavor m1.tiny --image cirros \
  --nic net-id=7369af9f-1609-4fbb-ad58-c8bd98d66848  --security-group default \
  --key-name mykey provider-instance