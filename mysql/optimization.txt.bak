1.符合三范（3nf）模式
2.分表设计
3，配置优化
4.合理设置索引
5.硬件优化
6.读写分离
7.存储


show 【session|global】status like 默认是session会话，指出当前

show status like 'connections';

#慢查询次数
show status like 'slow_queries';

如何定位慢查询

构建大表（400万）-》存储过程构建->要求记录尽量不同
create database temp; 
set names gbk;

CREATE TABLE dept( /*部门表*/  
deptno MEDIUMINT   UNSIGNED  NOT NULL  DEFAULT 0,   
dname VARCHAR(20)  NOT NULL  DEFAULT "",  
loc VARCHAR(13) NOT NULL DEFAULT ""  
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ;  

  
#创建表EMP雇员  
CREATE TABLE emp  
(empno  MEDIUMINT UNSIGNED  NOT NULL  DEFAULT 0, /*编号*/  
ename VARCHAR(20) NOT NULL DEFAULT "", /*名字*/  
job VARCHAR(9) NOT NULL DEFAULT "",/*工作*/  
mgr MEDIUMINT UNSIGNED NOT NULL DEFAULT 0,/*上级编号*/  
hiredate DATE NOT NULL,/*入职时间*/  
sal DECIMAL(7,2)  NOT NULL,/*薪水*/  
comm DECIMAL(7,2) NOT NULL,/*红利*/  
deptno MEDIUMINT UNSIGNED NOT NULL DEFAULT 0 /*部门编号*/  
)ENGINE=MyISAM DEFAULT CHARSET=utf8 ;  

#工资级别表  
CREATE TABLE salgrade  
(  
grade MEDIUMINT UNSIGNED NOT NULL DEFAULT 0,  
losal DECIMAL(17,2)  NOT NULL,  
hisal DECIMAL(17,2)  NOT NULL  
)ENGINE=MyISAM DEFAULT CHARSET=utf8;  
  
INSERT INTO salgrade VALUES (1,700,1200);  
INSERT INTO salgrade VALUES (2,1201,1400);  
INSERT INTO salgrade VALUES (3,1401,2000);  
INSERT INTO salgrade VALUES (4,2001,3000);  
INSERT INTO salgrade VALUES (5,3001,9999);  
  
为了存储过程能正常执行修改命令执行结束fu
delimiter $$  

create function rand_string(n INT)   
returns varchar(255) #该函数会返回一个字符串  
begin   
#chars_str定义一个变量 chars_str,类型是 varchar(100),默认值'abcdefghijklmnopqrstuvwxyzABCDEFJHIJKLMNOPQRSTUVWXYZ';  
 declare chars_str varchar(100) default  
   'abcdefghijklmnopqrstuvwxyzABCDEFJHIJKLMNOPQRSTUVWXYZ';  
 declare return_str varchar(255) default '';  
 declare i int default 0;  
 while i < n do   
   set return_str =concat(return_str,substring(chars_str,floor(1+rand()*52),1));  
   set i = i + 1;  
   end while;  
  return return_str;  
  end $$  

create function rand_num( )  
returns int(5)  
begin   
 declare i int default 0;  
 set i = floor(10+rand()*500);  
return i;  
  end $$  

create procedure insert_emp(in start int(10),in max_num int(10))  
begin  
declare i int default 0;   
#set autocommit =0 把autocommit设置成0  
 set autocommit = 0;    
 repeat  
 set i = i + 1;  
 insert into emp values ((start+i) ,rand_string(6),'SALESMAN',0001,curdate(),2000,400,rand_num());  
  until i = max_num  
 end repeat;  
   commit;  
 end $$  

delimiter ;  
#调用刚刚写好的函数, 1800000条记录,从100001号开始  
call insert_emp(100001,4000000);  





默认情况10s为慢查询

修改慢查询时间为1s
show variables like 'long_query_time';
set long_query_time = 1；

把慢查询的sql记录到日志中
默认不会记录，需要启动时启动记录慢查询
 5.5    bin/mysqld.exe --safe-mode --slow-query-log (可以在my.cnf，文件默认放在data目录）
 5.0及其以下 bin/mysqld.exe -log-slow-queries=d:/adc.log(可以在my.cnf) 

my.cnf

slow_query_log=TRUE
slow_query_log_file=/usr/local/mysql/slow_query_log.txt
long_query_time=3	

添加索引


删除索引
alter table 表名 drop 索引名
alter table 表名 drop primary key（主键只有一个）

修改索引
先删除再重新创建




1.1主键索引
创建表时，也可以在创建表后
增加主键索引
alter table 表名 add primary key(列名)


查询索引
desc 表名；（看不到索引值）
show index from 表名；
show keys from 表名；
不能为null，也不能重复


1.2普通索引
一般来说，先创建表再创建普通索引

create index 索引名 on 表（列1,列2）


1.3全文索引
全文索引主要用于文本检索，比如文章（针对myISAM有效）

说明：
1.针对myISAM
2.只针对英文-》中文用sphinx（coreseek）
3.使用方法：match（字段名）against（“关键字”）
4.全文索引一个停止词，因为在文本中，创建索引是一个无穷大的数，因此对一些常用词和字符，就不会创建，这些词称为停止词

1.4唯一索引当表的某列指定为unique时，这列就是一个唯一索引
可以为null，并且可以多个，如果是具体内容，则不能重复

创建方式
1.create table bbb(id int primary key auto_increment,name varvhar(20) unique)
2.创建表后，再建
create unique index on 表名（列）















 